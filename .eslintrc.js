module.exports = {
    parser: '@typescript-eslint/parser',
    parserOptions: {
        project: 'tsconfig.json',
        tsconfigRootDir: __dirname,
        sourceType: 'module',
    },
    plugins: ['@typescript-eslint/eslint-plugin'],
    extends: [
        'plugin:@typescript-eslint/recommended',
    ],
    root: true,
    env: {
        node: true,
        jest: true,
    },
    ignorePatterns: ['.eslintrc.js'],
    rules: {
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/consistent-generic-constructors": "warn",
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/consistent-type-exports": "warn",
        "@typescript-eslint/method-signature-style": "warn",
        "@typescript-eslint/no-confusing-void-expression": "warn",
        "@typescript-eslint/no-duplicate-enum-values": "warn",
        "@typescript-eslint/no-duplicate-imports": "warn",
        "@typescript-eslint/no-dynamic-delete": "warn",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-extra-non-null-assertion": "warn",
        "@typescript-eslint/no-implied-eval": "warn",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-redundant-type-constituents": "warn",
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/no-this-alias": "warn",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-unnecessary-type-constraint": "warn",
        "@typescript-eslint/no-unsafe-argument": "warn",
        // "@typescript-eslint/no-unsafe-assignment": "warn",
        "@typescript-eslint/no-unsafe-return": "warn",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-use-before-define": "warn",
        "@typescript-eslint/no-useless-empty-export": "warn",
        "@typescript-eslint/prefer-enum-initializers": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/restrict-plus-operands": "warn",
        "@typescript-eslint/switch-exhaustiveness-check": "warn",
        "@typescript-eslint/unified-signatures": "warn",
        "arrow-body-style": ["warn", "always"],
        "block-scoped-var": "warn",
        "default-case-last": "warn",
        "default-param-last": "warn",
        "id-length": [2, { "min": 3, "max": 20, "properties": "always", "exceptions": ["i", "j", "k", "x", "y", "a", "id", "_id", "if"] }],
        "max-classes-per-file": ["warn", 1],
        // "max-lines-per-function": ["warn", 10],
        "max-params": ["warn", 5],
        // "max-statements": ["warn", 10],
        "no-duplicate-imports": "warn",
        "no-else-return": "warn",
        "no-empty": "warn",
        "no-empty-function": "warn",
        "no-extra-semi": "warn",
        "no-floating-decimal": "warn",
        "no-implied-eval": "warn",
        "no-nested-ternary": "warn",
        "no-new": "warn",
        "no-new-object": "warn",
        "no-param-reassign": "warn",
        // "no-return-await": "warn",
        "no-unused-vars": "off",
        "no-use-before-define": "off",
        "no-useless-concat": "warn",
        "no-useless-return": "warn",
        "prefer-const": "warn",
        "prefer-template": "warn",
        "yoda": "warn",
    },
};